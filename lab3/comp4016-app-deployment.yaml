# Kubernetes namespace
apiVersion: v1
kind: Namespace
metadata:
  name: ozdemirozcelik

---

# PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: comp4016-config-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: config-volume-claim
  namespace: ozdemirozcelik
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi  # match the PersistentVolume

---

# StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: comp4016-statefulset
  namespace: ozdemirozcelik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: comp4016-app
  serviceName: "comp4016-service" # useful for making the pods discoverable
  template:
    metadata:
      labels:
        app: comp4016-app
    spec:
      volumes:
      - name: config-volume-storage
        persistentVolumeClaim:
          claimName: config-volume-claim # match the PersistentVolumeClaim
      containers:
      - name: comp4016-container
        image: ozdemirozcelik/comp4016_3
        volumeMounts:
        - name: config-volume-storage # match the volume name
          mountPath: "/config"  # mount the volume at this path
        ports:
        - containerPort: 8080
        env:
        - name: ENV_VALUE
          value: environmentSnake
        envFrom:
        - configMapRef:
            name: comp4016-app-config
        - secretRef:
            name: comp4016-app-secret
        resources: # resource limits for the individual containers in pods
          limits:
            cpu: "0.99"
          requests:
            cpu: "0.01" # minimum amount of resources that a container requires to run
        readinessProbe:
          exec:
            command:
              - "curl"
              - "--fail"
              - "http://comp4016-app-service-probe.probe.svc:30010/isAlive"
          # Not possible to expose DNS service to readiness probe
          # httpGet:
          #   path: /isAlive
          #   port: 8080
          #   scheme: HTTP
            # host: 10.100.134.35  # using IP works
            # host: comp4016-app-service-probe.probe  # does not work
            # host: comp4016-app-service-probe.probe.svc.cluster.local  # does not work
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 5
---

# Service with type LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: comp4016-app-service
  namespace: ozdemirozcelik
spec:
  type: LoadBalancer
  selector:
    app: comp4016-app
  ports:
    - protocol: TCP
      port: 30000  # App listens on this port
      targetPort: 8080  # App runs on this port

---

# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: comp4016-hpa
  namespace: ozdemirozcelik
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: comp4016-statefulset
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource: # scale the number of pod replicas based on resource utilization metrics across all containers in the StatefulSet
      name: cpu
      target:
        type: Utilization
        averageUtilization: 30
  # behavior:
  #   scaleUp:
  #     policies:
  #     - type: Pods
  #       value: 1  # amount to scale up by
  #       periodSeconds: 10  # lower value for faster scaling
  #   scaleDown:
  #     policies:
  #     - type: Pods
  #       value: 2  # amount to scale down by
  #       periodSeconds: 10  #  lower value for faster scaling
---

# Environment variables from ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: comp4016-app-config
  namespace: ozdemirozcelik
data:
  CONFIG_VALUE: snake
---

# Environment variables from Secret
apiVersion: v1
kind: Secret
metadata:
  name: comp4016-app-secret
  namespace: ozdemirozcelik
data:
  SECRET_VALUE: c2VjcmV0U25ha2U= # Base64-encoded value of 'secretSnake'
